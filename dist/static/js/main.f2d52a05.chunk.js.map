{"version":3,"sources":["components/layouts/SignedInLinks.js","store/actions/authActions.js","components/layouts/SignedOutLinks.js","components/layouts/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fireBaseConf.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","catch","err","payload","props","profile","react_default","a","createElement","className","NavLink","to","onClick","initials","SignedOutLinks","state","firebase","links","uid","layouts_SignedInLinks","layouts_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","format","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","emptyField","signUp","objectSpread","newUsr","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createNewProject","history","push","authorId","add","Date","createProject","App","BrowserRouter","layouts_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fireBaseConf","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2d52a05.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {signOut } from '../../store/actions/authActions';\n\n\n\n\nconst SignedInLinks=(props)=>{\n    const {profile}=props;\n        return(\n            <ul className=\"right\"> \n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li>\n                {/* eslint-disable-next-line */}\n                    <a onClick={props.signOut}>Logout</a>     \n            </li>\n                \n            <li><NavLink to='/' className='btn btn-floating lighten-1 green'>{profile.initials}</NavLink></li>\n            </ul>\n        )\n    \n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        signOut:()=>dispatch(signOut())\n    }\n}\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn=(credentials)=>{\n    return (dispatch,getState,{getFirebase})=>{\n        const firebase=getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        )\n        .then(()=>{\n            dispatch({\n                type:'LOGIN_SUCCESS'\n            })\n        })\n        .catch((err)=>{\n            dispatch({\n                type:'LOGIN_FAILED',\n                payload:err\n            })\n        })\n    }\n}\n\n\nexport const signOut=()=>{\n    return (dispatch,getState,{getFirebase})=>{\n        const firebase=getFirebase();\n        firebase.auth().signOut()\n            .then(()=>{\n                dispatch({\n                    type:'SIGNOUT_SUCCESS'\n                })\n            })\n            .catch((err)=>{\n                dispatch({\n                    type:'SIGNOUT_ERROR',\n                    payload:err\n                })\n            })\n    }\n}\n\nexport const signUp=(newUsr)=>{\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\n        const firebase= getFirebase();\n        const firestore=getFirestore();\n        firebase.auth().createUserWithEmailAndPassword(\n            newUsr.email,\n            newUsr.password\n        ).then((resp)=>{\n            return firestore.collection('users').doc(resp.user.uid).set({\n                email:newUsr.email,\n                password:newUsr.password,\n                firstName:newUsr.firstName,\n                lastName:newUsr.lastName,\n                initials:newUsr.firstName[0]+newUsr.lastName[0]\n            })\n        }).then(()=>{\n            dispatch({\n                type:'SIGNUP_SUCCESS'\n            })\n        }).catch(err=>{\n            dispatch({\n                type:'SIGNUP_ERROR',\n                payload:err\n            })\n        })\n    }\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst SignedOutLinks=()=>{\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/signin'>Log In</NavLink></li>\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport {connect} from 'react-redux';\n\n\nconst Navbar=(props)=>{\n\n    const {auth,profile}=props;\n    const links= auth.uid? < SignedInLinks profile={profile}/>:<SignedOutLinks/>;\n    return(\n\n    <nav className=\"nav-wrapper grey darken-3\">\n        <div className=\"container\">\n          <Link to='/' className=\"brand-logo\">MarioPlan</Link> \n          { links }\n        </div>\n    </nav>\n    );\n}\n\nconst mapStateToProps=(state)=>{\n    return{\n        auth:state.firebase.auth,\n        profile:state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications=(props)=>{\n    const {notifications}=props;\n    return(\n        <div className='section'>\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item=>{\n                            return(\n                                <li key={item.id}>\n                                    <span className='green-text'>{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className='grey-text'>\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n         </div>\n    );\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary=({project})=>{\n    return(\n        <div className=\"card z-depth-0 project-summary\">\n                <div className=\"card-content grey-text text-darken-3\">\n                    <span className=\"card-title\">Title-{project.title}</span>\n                    <p>Posted By {project.authorFirstName} {project.authorLastName}</p>\n                    <p className='text-darken-3'>\n                        {moment(project.createdAt.toDate()).format('LL')}\n                    </p>\n                </div>\n            </div>\n    );\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport {Link } from 'react-router-dom';\n\nconst ProjectList=({projects})=>{\n    return(\n        <div className=\"project-list section\">\n        { projects && projects.map(project=>{\n            return(\n            <Link to={'/project/'+project.id} key={project.id}>\n                <ProjectSummary project={project} />\n            </Link>\n            )\n        })}           \n        </div>\n    )\n}\n\nexport default ProjectList;","import React,{Component} from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport {Redirect} from 'react-router-dom';\nclass Dashboard extends Component{\n    render(){\n        const {projects,auth,notifications}=this.props;  \n        if(!auth.uid) return   <Redirect to='/signin'/>    \n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\"> \n                    <div className=\"col s12 m6\"><ProjectList projects={projects}/></div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    console.log(state);\n    \n    return{\n        projects:state.firestore.ordered.projects,\n        auth:state.firebase.auth,\n        notifications:state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection:'projects',limit:5,orderBy:['createdAt','desc']},\n        {collection:'notifications', \n         limit:3,\n         orderBy:['time','desc']\n        }\n    ])\n    )(Dashboard);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport {compose } from 'redux';\nimport {Redirect} from 'react-router-dom';\nimport moment from 'moment';\n\n\nconst ProjectDetails=(props)=>{\n\n  const {project,auth}=props;\n  if(!auth.uid) return <Redirect to='/signin'/>\n  if(project){\n    return (\n      <div className='container section project-details'>\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n              <span className=\"cart-title\"><h4>{project.title}</h4></span>\n              <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n              <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n              <div>\n                {moment(project.createdAt.toDate()).format('LL')}\n              </div>\n          </div>\n        </div>\n      </div>\n    )\n  }else{\n    return(\n      <div className='container center'>\n        <p>Project Loading</p>\n      </div>\n    )\n  }\n  \n\n}\n\nconst mapStateToProps=(state,ownProps)=>{\n  const id=ownProps.match.params.id;\n  const projects =state.firestore.data.projects;\n  const project=projects? projects[id] : null;\n  return {\n    project:project,\n    auth:state.firebase.auth\n\n  };\n  \n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection:'projects' }\n])\n  )(ProjectDetails);\n","import React,{Component} from 'react';\nimport {connect} from 'react-redux';\nimport {signIn} from '../../store/actions/authActions';\nimport {Redirect} from 'react-router-dom';\n\n\nclass SignIn extends Component{\n    state={\n        email:'',\n        password:''\n    }\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        });\n\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        this.props.signIn(this.state);\n        \n    }\n    render(){\n\n        const {authError,auth}=this.props;\n        if(auth.uid) return <Redirect to='/' />\n        return(\n            <div className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <h5 className=\"grey-text darken-3\">Sign In</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input value={this.state.email} onChange={this.handleChange} type=\"email\" id='email'/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input value={this.state.password} onChange={this.handleChange} type=\"password\" id='password'/>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn green lighten-1 z-depth-0\">Login</button>\n                </div>\n                <div className=\"container red-text\">\n                    {authError ? <p className='center'>{authError}</p>:null}\n                </div>\n            </form>\n            </div>\n        );\n    }\n}\nconst mapStateToProps=(state)=>{\n    return {\n        authError:state.auth.authError,\n        auth:state.firebase.auth\n\n    }\n    \n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        signIn:(creds)=>{\n            dispatch(signIn(creds));\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);","import React,{Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {signUp} from '../../store/actions/authActions'\n\n\n\nclass SignUp extends Component{\n    state={\n        email:'',\n        password:'',\n        firstName:'',\n        lastName:'',\n        emptyField:null\n    }\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        });\n\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        if(this.state.email&&this.state.password&&this.state.lastName&&this.state.firstName){\n            this.props.signUp(this.state);\n            this.setState({\n                ...this.state,\n                emptyField:null\n            })\n    \n        }else{\n            this.setState({\n                ...this.state,\n                emptyField:'No field can be empty.'\n            })\n        }\n    }\n    render(){\n        const {auth,authError}=this.props;\n        if(auth.uid) return <Redirect to='/'/>\n        return(\n            <div className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <h5 className=\"grey-text darken-3\">Sign Up</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input onChange={this.handleChange} type=\"text\" id='firstName'/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input onChange={this.handleChange} type=\"text\" id='lastName'/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input onChange={this.handleChange} type=\"email\" id='email'/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input onChange={this.handleChange} type=\"password\" id='password'/>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn green lighten-1 z-depth-0\">Submit</button>\n                </div>\n                <div className=\"container center red-text\">\n                   {this.state.emptyField? <p>{this.state.emptyField}</p>:null}\n                   {authError? <p>{authError}</p>:null}\n            </div>\n            </form>\n            \n            </div>\n        );\n    }\n}\nconst mapStateToProps=(state)=>{\n    return{\n        auth:state.firebase.auth,\n        authError:state.auth.authError\n    }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        signUp:(newUsr)=>{\n            dispatch(signUp(newUsr))\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);","import React,{Component} from 'react';\nimport {createProject} from '../../../src/store/actions/projectActions';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nclass CreateProject extends Component{\n    state={\n        title:'',\n        content:'',\n        emptyField:null\n    }\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        });\n        \n\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        if(this.state.title&&this.state.content){\n            this.props.createNewProject(this.state);\n            this.setState({\n                title:'',\n                content:'',\n                emptyField:null\n            });\n            this.props.history.push('/');\n            \n            }else{\n                this.setState({\n                    ...this.state,\n                    emptyField:'No field can be empty.'\n                })\n            }\n            \n    }\n    render(){\n        const {auth}=this.props;\n        if(!auth.uid) return <Redirect to='signin' />\n        return(\n            <div className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <h5 className=\"grey-text darken-3\">Create Project</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input value={this.state.title} onChange={this.handleChange} type=\"text\" id='title'/>\n         \n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"content\">Project Content</label>\n                    <textarea value={this.state.content} className='materialize-textarea' onChange={this.handleChange} id='content'></textarea>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn green lighten-1 z-depth-0\">Submit</button>\n                </div>\n                <div className='container red-text center' >\n                {this.state.emptyField? <p>{this.state.emptyField}</p>:null}\n                </div>\n            </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return{\n        auth:state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        createNewProject:(project)=>{\n            dispatch(createProject(project));\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject);","export const createProject=(project)=>{\n    return(dispatch,getState,{getFirebase,getFirestore})=>{\n        const firestore=getFirestore();\n        const profile=getState().firebase.profile;\n        const authorId=getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName:profile.firstName,\n            authorLastName:profile.lastName,\n            authorId:authorId,\n            createdAt:new Date()\n        }).then(()=>{\n            dispatch({\n                type:'CREATE_PROJECT',\n                payload:project\n            });\n        }).catch(err=>{\n            dispatch({\n                type:'CREATE_PROJECT_ERROR',\n                payload:err\n            });\n        })\n    }\n}","import React, { Component } from 'react';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\nimport Navbar from './components/layouts/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path='/'   component={Dashboard}></Route>\n          <Route exact path='/project/:id' component={ProjectDetails}></Route>\n          <Route exact path='/signin' component={SignIn}></Route>\n          <Route exact path='/signup' component={SignUp}></Route>\n          <Route exact path='/create' component={CreateProject}></Route>\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState={\n   authError:null\n}\n\nconst authReducer=(state=initState,action)=>{\n    switch(action.type){\n        case 'LOGIN_FAILED':\n            console.log('Login Failed',action.payload);\n            return{\n                ...state,\n                authError:'Login Failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('Login Success');\n            return{\n                ...state,\n                authError:null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('SIGNOUT_SUCCESS');\n            return state;\n\n        case 'SIGNOUT_ERROR':\n            console.log('SIGNOUT_ERROR');\n            return state;\n\n        case 'SIGNUP_SUCCESS':\n            console.log('SIGNUP_SUCCESS');\n            return {\n                ...state,\n                authError:null\n            }\n\n        case 'SIGNUP_ERROR':\n            console.log('SIGNUP_ERROR');\n            return{\n                ...state,\n                authError:action.payload.message\n            }\n            \n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initState={\n    projects:[\n        {id:'1',title:'post 1',content:'Content 1'},\n        {id:'2',title:'post 2',content:'Content 2'},\n        {id:'3',title:'post 3',content:'Content 3'}\n    ]\n}\nconst projectReducer=(state=initState,action)=>{\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log('SUCCESS',action.payload);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('ERROR',action.payload);\n            return state;\n        default:\n            return state;\n    }\n }\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport {combineReducers} from 'redux';\nimport {firestoreReducer} from 'redux-firestore';\nimport {firebaseReducer} from 'react-redux-firebase';\n\nconst rootReducer=combineReducers({\n    auth:authReducer,\n    project:projectReducer,\n    firestore:firestoreReducer,\n    firebase:firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyA6jGnPjYuOQoNloPSx9QbkpZieCq5GR_8\",\n    authDomain: \"opu-vai-project.firebaseapp.com\",\n    databaseURL: \"https://opu-vai-project.firebaseio.com\",\n    projectId: \"opu-vai-project\",\n    storageBucket: \"opu-vai-project.appspot.com\",\n    messagingSenderId: \"866180635592\"\n  };\nfirebase.initializeApp(config);\nfirebase.firestore().settings({timestampsInSnapshots:true});\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware,compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport {reactReduxFirebase,getFirebase} from 'react-redux-firebase';\nimport {reduxFirestore,getFirestore} from 'redux-firestore';\nimport fireBaseConf from './config/fireBaseConf'\n\nconst store=createStore(rootReducer,\n    compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n    reactReduxFirebase(fireBaseConf,\n        {\n            useFirestoreForProfile:true,\n            userProfile:'users',\n            attachAuthIsReady:true\n        }),\n    reduxFirestore(fireBaseConf)\n    )\n);\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}